// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projekt.Data;

#nullable disable

namespace projekt.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250622192931_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("projekt.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CenaZaDzien")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Dostepny")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MocKM")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Naped")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrzyspieszenieSek")
                        .HasColumnType("TEXT");

                    b.Property<string>("Silnik")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Spalanie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Zdjecie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Samochody");
                });

            modelBuilder.Entity("projekt.Models.Klient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cena")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("Dni")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Klienci");
                });

            modelBuilder.Entity("projekt.Models.Wypozyczenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CenaCalkowita")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataOd")
                        .HasColumnType("TEXT");

                    b.Property<int>("KlientId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("KlientId");

                    b.ToTable("Wypozyczenia");
                });

            modelBuilder.Entity("projekt.Models.Klient", b =>
                {
                    b.HasOne("projekt.Models.Car", "Auto")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auto");
                });

            modelBuilder.Entity("projekt.Models.Wypozyczenie", b =>
                {
                    b.HasOne("projekt.Models.Car", "Car")
                        .WithMany("Wypozyczenia")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projekt.Models.Klient", "Klient")
                        .WithMany()
                        .HasForeignKey("KlientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Klient");
                });

            modelBuilder.Entity("projekt.Models.Car", b =>
                {
                    b.Navigation("Wypozyczenia");
                });
#pragma warning restore 612, 618
        }
    }
}
